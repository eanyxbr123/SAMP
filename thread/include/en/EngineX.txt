Hello, I would like to present EngineX.This mechanism was created to manipulate objects automatically planes.[b]Video:[/b][url=https://www.youtube.com/watch?v=fTvbNnZpogY]EngineX v6.0 (ColAndreas Precision)[/url][url=https://www.youtube.com/watch?v=PtJCS-3EGY0]EngineX v5.0 (Full Presentation)[/url] Presentation starts at 03:10[b]Mechanism contains the following instructions manipulate objects:[/b][code][color=#00CC00]ENGINE_NORMAL 		//[Object: 1681, 18846 OR ANY] 		|| 6.0 XENGINE_FIGHTER		//[Object: 10757]			|| 6.0 XENGINE_SUPPLY		//[Object: 1683, 3528]			|| 6.0 X[/color][color=#CC0000]ENGINE_NGCMS		//[N/A] (Only NGCM)			|| 4.0 XENGINE_ARCMS		//[N/A] (Only NGCM)			|| 4.0 XENGINE_COMMANDER	//[N/A] (Only NGCM)			|| 4.0 X[/color][color=#00CC00]ENGINE_ELITE		//[Object: 14553] 			|| 6.0 XENGINE_UBOOT		//[Object: 9958]			|| 6.0 XENGINE_SHIP		//[Object: 8493]			|| 6.0 CAENGINE_MINI		//[Object: 2510, 2512]			|| 6.0 XENGINE_EXCAVATOR	//[Object: 18248]			|| 4.1 G (Ground)ENGINE_UNDERDUDE	//[Object: 1379]			|| 6.0 U (Underwater)[/color][/code][b]Delta/Epsilon Engine Rotation Speed:[/b][code][color=#00CC00]DELTA_ENGINE_SPEED_NORMAL 		(0.050)DELTA_ENGINE_SPEED_FIGHTER		(0.050)DELTA_ENGINE_SPEED_SUPPLY		(0.020)[/color][color=#CC0000]DELTA_ENGINE_SPEED_NGCMS		(0.050)DELTA_ENGINE_SPEED_ARCMS		(0.050)DELTA_ENGINE_SPEED_COMMANDER		(0.050)[/color][color=#00CC00]DELTA_ENGINE_SPEED_ELITE		(0.010)DELTA_ENGINE_SPEED_UBOOT		(0.005)DELTA_ENGINE_SPEED_SHIP			(0.050)DELTA_ENGINE_SPEED_MINI			(0.050)[/color][color=#CC0000]DELTA_ENGINE_SPEED_EXCAVATOR		(0.001)[/color][color=#00CC00]DELTA_ENGINE_SPEED_UNDERDUDE		(0.050)[/color][/code][b]Functions v4.0 and v5.0:[/b][php]//Function execution for Engine 4.0 during 0.5 secondsEngineX(objectid,areaid,engineid,minradius,maxradius,Float:minz,Float:speed);//Function execution for Engine 5.0 X during 0.5 seconds//Performing for the change when the object does not move//step 1DeltaEngineRotation(objectid,engineid,Float:speed = 0.05);//step 2DeltaEngineX(objectid,areaid,engineid,minradius,maxradius,Float:minz,Float:speed);[/php][b]Example:[/b][php]//every 0.5 secondspublic DefenseHulkUpdate(mobid){	if(DefenseHulkStatus[mobid] == (1)){		EngineX(DefenseHulk[mobid][22],DefenseHulk[mobid][0],ENGINE_NORMAL,50,200,25,MOB_SPEED_SLOW);	}	return 1;}//every 0.5 secondspublic FighterUpdate(mobid){	if(NGCFighter[mobid][2] == 1){		if(!IsDynamicObjectMoving(NGCFighter[mobid][0])){			if(NGCFighter[mobid][3] == 0){				DeltaEngineRotation(NGCFighter[mobid][0],ENGINE_FIGHTER);				NGCFighter[mobid][3] = 1;			} else {				DeltaEngineX(NGCFighter[mobid][0],NGCFighter[mobid][1],ENGINE_FIGHTER,50,100,5,MOB_SPEED_NORMAL);				NGCFighter[mobid][3] = 0;			}		}	}	return 1;}//every 0.5 secondspublic ExcavatorUpdate(mobid){	if(NGCExcavator[mobid][2] == 1){		EngineX(NGCExcavator[mobid][0],NGCExcavator[mobid][1],ENGINE_EXCAVATOR,50,100,1.0,MOB_SPEED_SLOW);		EngineExcavatorUpdate(NGCExcavator[mobid][0],NGCExcavator[mobid][1],ENGINE_EXCAVATOR,MOB_SPEED_SLOW);			}	return 1;}[/php][b]Functions v6.0:[/b][php]//Function execution for Engine 6.0 CA during 0.5 secondsEngineXCA(objectid,areaid,EngineX:engineid,minradius,maxradius,Float:minz,Float:speed,Float:cut_size=5.0);//Function execution for Engine 6.0 X during 0.5 seconds//Performing for the change when the object does not move//step 1EpsilonEngineRotation(objectid,engineid,Float:speed = 0.05);//step 2EpsilonEngineX(objectid,areaid,engineid,minradius,maxradius,Float:minz,Float:speed,Float:cut_size=5.0);[/php][b]Example:[/b][php]//every 0.5 secondspublic DefenseHulkUpdate(mobid){	if(DefenseHulkStatus[mobid] == (1)){		EngineXCA(DefenseHulk[mobid][22],DefenseHulk[mobid][0],ENGINE_NORMAL,50,200,25,MOB_SPEED_SLOW);	}	return 1;}//every 0.5 secondspublic FighterUpdate(mobid){	if(NGCFighter[mobid][2] == 1){		if(!IsDynamicObjectMoving(NGCFighter[mobid][0])){			if(NGCFighter[mobid][3] == 0){				EpsilonEngineRotation(NGCFighter[mobid][0],ENGINE_FIGHTER);				NGCFighter[mobid][3] = 1;			} else {				EpsilonEngineX(NGCFighter[mobid][0],NGCFighter[mobid][1],ENGINE_FIGHTER,50,100,5,MOB_SPEED_NORMAL);				NGCFighter[mobid][3] = 0;			}		}	}	return 1;}//every 0.5 secondspublic ExcavatorUpdate(mobid){	if(NGCExcavator[mobid][2] == 1){		EngineXCA(NGCExcavator[mobid][0],NGCExcavator[mobid][1],ENGINE_EXCAVATOR,50,100,1.0,MOB_SPEED_SLOW);		EngineExcavatorUpdate(NGCExcavator[mobid][0],NGCExcavator[mobid][1],ENGINE_EXCAVATOR,MOB_SPEED_SLOW);			}	return 1;}[/php][b]Here a sample script for Reaver Defense Hulk and 2 types of aircraft:[/b][url=http://8.ct8.pl/d/DefenseHulk.pwn]DefenseHulk.pwn[/url][url=http://8.ct8.pl/d/DefenseHulkV6.pwn]DefenseHulkV6.pwn[/url][b]Download Include:[/b][url=http://8.ct8.pl/d/3DTryg.inc]3DTryg.inc[/url] [url=8.ct8.pl/2][color=#003D00][b]Thread[/b][/color][/url][url=http://8.ct8.pl/d/EngineV6.inc]EngineV6.inc[/url][url=http://8.ct8.pl/d/EngineX.inc]EngineX.inc[/url][url=http://forum.sa-mp.com/showthread.php?t=586068]ColAndreas (EngineV6)[/url][b]YSF - kurta999's version:[/b]http://forum.sa-mp.com/showthread.php?t=513499